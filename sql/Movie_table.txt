  -- 회원 정보
CREATE TABLE MEMBER (
    MEMBER_ID VARCHAR2(255) PRIMARY KEY,						-- 회원 ID(PK)
    MEMBER_NAME VARCHAR2(255) NOT NULL,						-- 회원 이름
    MEMBER_PASSWORD VARCHAR2(255) NOT NULL,					-- 비번
    MEMBER_PHONE VARCHAR2(13) NOT NULL,						-- 전화번호
    MEMBER_EMAIL VARCHAR2(255) UNIQUE NOT NULL,					-- 이메일
    MEMBER_COUPON NUMBER DEFAULT 0,						-- 쿠폰
    MEMBER_ADMIN CHAR(1) DEFAULT 'N',						-- 어드민 여부
    MEMBER_STAMP NUMBER DEFAULT 0,						-- 스탬프
    MEMBER_IMG VARCHAR2(255) DEFAULT 'default.jpg'					-- 프로필사진
);


-- 영화 정보
CREATE TABLE MOVIE (
    MOVIE_NO NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,     -- 영화 NO(PK)
    MOVIE_TITLE VARCHAR2(255) NOT NULL,				  	        -- 영화제목
    MOVIE_START_DATE DATE NOT NULL,					        -- 개봉일
    MOVIE_END_DATE DATE NOT NULL,					        -- 종료일
    MOVIE_DIRECTOR VARCHAR2(255) NOT NULL,				        -- 감독
    MOVIE_ACTOR VARCHAR2(255) NOT NULL,				        		-- 배우
    MOVIE_GENRE VARCHAR2(255) NOT NULL,					        -- 장르
    MOVIE_AGE_LIMIT VARCHAR2(50) NOT NULL,				        -- 연령제한
    MOVIE_SHOWTIME NUMBER NOT NULL,					        -- 상영시간
    MOVIE_NATIONALITY VARCHAR2(255) NOT NULL,				        -- 국적
    MOVIE_SUMMARY CLOB NOT NULL,					        -- 줄거리
    MOVIE_MAIN_IMAGE VARCHAR2(255) NOT NULL,					        -- 메인이미지 경로
    MOVIE_SUB_IMAGE VARCHAR2(255) ,					        -- 서브1이미지 경로
    MOVIE_SSUB_IMAGE VARCHAR2(255),					        -- 서브2이미지 경로
    MOVIE_TRAILER VARCHAR2(255),						        -- 예고편
    MOVIE_MAIN_TRAILER VARCHAR2(255) NOT NULL,                    -- 메인 예고편
    MOVIE_SUB_TRAILER VARCHAR2(255),                              -- 서브1 예고편
    MOVIE_SSUB_TRAILER VARCHAR2(255),                             -- 서브2 예고편
    MOVIE_MAIN_THUMBNAIL VARCHAR2(255) NOT NULL,                  -- 메인 예고편 썸네일
    MOVIE_SUB_THUMBNAIL VARCHAR2(255),                            -- 서브1 예고편 썸네일
    MOVIE_SSUB_THUMBNAIL VARCHAR2(255)                            -- 서브2 예고편 썸네일
);


-- 리뷰
CREATE TABLE REVIEW (
    REVIEW_NO NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,	-- 리뷰 NO(PK)
    REVIEW_MEMBER_ID VARCHAR2(255) NOT NULL,    					-- 멤버 ID(RF)
    REVIEW_MOVIE_NO NUMBER NOT NULL,						-- 영화 NO(RF)
    REVIEW_CONTENT VARCHAR2(255) NOT NULL,					-- 내용
    REVIEW_WRITE_DATE DATE DEFAULT TRUNC(TRUNC(SYSDATE)),					-- 작성일
    REVIEW_STAR_RATING NUMBER NOT NULL,						-- 별점
    REVIEW_TICKET_NO NUMBER NOT NULL,						-- 티켓번호
    FOREIGN KEY (REVIEW_MEMBER_ID) REFERENCES MEMBER(MEMBER_ID),	
    FOREIGN KEY (REVIEW_MOVIE_NO) REFERENCES MOVIE(MOVIE_NO),
    FOREIGN KEY (REVIEW_TICKET_NO) REFERENCES TICEKT(TICKET_NO)
);


-- 제품
CREATE TABLE PRODUCT (
    PRODUCT_NO NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,	-- 제품 NO(PK)
    PRODUCT_CODE VARCHAR2 (255) NOT NULL,                    -- 상품 코드
    PRODUCT_PRICE NUMBER NOT NULL,						-- 제품 가격
    PRODUCT_NAME VARCHAR2(255) NOT NULL,					-- 제품 이름
    PRODUCT_ORIGIN VARCHAR2(255) NOT NULL,					-- 제품 원산지
    PRODUCT_IMAGE VARCHAR2(255) NOT NULL,					-- 제품 이미지
    PRODUCT_CONTENT VARCHAR2(255) NOT NULL                  -- 제품 내용
); 

-- 장바구니
CREATE TABLE BASKET(
    BASKET_NO NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,	-- 장바구니 NO(PK)
    BASKET_PRODUCT_NO NUMBER NOT NULL,						-- 제품 NO(RF)
    BASKET_COUNT NUMBER NOT NULL,						-- 제품 수량
    BASKET_MEMBER_ID VARCHAR2(255) NOT NULL,						-- 회원 ID(RF)
    BASKET_STATUS CHAR(1) DEFAULT 'N',					-- 장바구니 상태(결제여부)
    FOREIGN KEY (BASKET_MEMBER_ID) REFERENCES MEMBER(MEMBER_ID),
    FOREIGN KEY (BASKET_PRODUCT_NO) REFERENCES PRODUCT(PRODUCT_NO)
);

-- 영화관
CREATE TABLE CINEMA (
    CINEMA_NO NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,	-- 영화관 NO(PK) 
    CINEMA_RLG VARCHAR2(255) NOT NULL,						-- 광역자치단체
    CINEMA_BLG VARCHAR2(255) NOT NULL,						-- 기초자치단체
    CINEMA_MOVIE_NO NUMBER NOT NULL,						-- 영화 NO(RF)
    CINEMA_SCREEN_DATE DATE NOT NULL,						-- 상영날짜
    FOREIGN KEY (CINEMA_MOVIE_NO) REFERENCES MOVIE(MOVIE_NO)
);


-- 상영관
CREATE TABLE THEATER (
    THEATER_NO NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,	-- 상영관 NO(PK)
    THEATER_START_TIME DATE NOT NULL,						-- 시작시간
    THEATER_END_TIME DATE NOT NULL,						-- 종료시간
    THEATER_NAME VARCHAR2(255) NOT NULL,    					-- 몇관
    THEATER_CINEMA_NO NUMBER NOT NULL,						-- 영화관 NO(RF)
    FOREIGN KEY (THEATER_CINEMA_NO) REFERENCES CINEMA(CINEMA_NO)
);


-- 좌석
CREATE TABLE SEAT (
    SEAT_NO NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,		-- 좌석 NO(PK)
    SEAT_THEATER_NO NUMBER NOT NULL,						-- 상영관 NO(RF)
    SEAT_ROW NUMBER NOT NULL,							-- 행
    SEAT_COL NUMBER NOT NULL,							-- 열
    FOREIGN KEY (SEAT_THEATER_NO) REFERENCES THEATER(THEATER_NO)
);


-- 결제 내역
CREATE TABLE PAYMENT (
    PAYMENT_NO NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,	-- 결제내역 NO(PK)
    PAYMENT_TYPE VARCHAR2(255) NOT NULL,						-- 결제 수단
    PAYMENT_DATE DATE DEFAULT SYSDATE,						-- 결제일
    PAYMENT_PRICE NUMBER NOT NULL,						-- 결제금액
    PAYMENT_IMP_UID VARCHAR2(255)							-- IMP_UID
);

-- 제품 결제 내역
CREATE TABLE PAYMENT_PRODUCT(
    PAYMENT_PRODUCT_NO NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,	-- 제품 결제 내역 NO(PK)
    PAYMENT_PRODUCT_PAYMENT_NO NUMBER NOT NULL,					-- 결제 내역 NO(RF)
    PAYMENT_PRODUCT_BASKET_NO NUMBER NOT NULL,					-- 장바구니 NO(RF)
    FOREIGN KEY (PAYMENT_PRODUCT_PAYMENT_NO) REFERENCES PAYMENT(PAYMENT_NO),
    FOREIGN KEY (PAYMENT_PRODUCT_BASKET_NO) REFERENCES BASKET(BASKET_NO)
);

-- 예매 내역
CREATE TABLE TICKET (
    TICKET_NO NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,	-- 예매 NO(PK)
    TICKET_MEMBER_ID VARCHAR2(255) NOT NULL,						-- 회원 ID(RF)
    TICKET_MOVIE_NO NUMBER NOT NULL,						-- 영화 NO(RF)
    TICKET_SEAT VARCHAR2(255) NOT NULL,						-- 좌석번호(RF)
    TICKET_THEATER_NO NUMBER NOT NULL,						-- 상영관 NO(RF)
    TICKET_CINEMA_NO NUMBER NOT NULL,						-- 영화관 NO(RF)
    TICKET_PAYMENT_NO NUMBER NOT NULL,						-- 결제 내역 NO(RF)
    TICKET_TEEN NUMBER DEFAULT 0,							-- 청소년 인원수
    TICKET_ADULT NUMBER DEFAULT 0,						-- 성인 인원수
    TICKET_SENIOR NUMBER DEFAULT 0,						-- 노인 인원수
    TICKET_COUPON NUMBER DEFAULT 0,						-- 쿠폰 사용 개수
    FOREIGN KEY (TICKET_MEMBER_ID) REFERENCES MEMBER(MEMBER_ID),			
    FOREIGN KEY (TICKET_MOVIE_NO) REFERENCES MOVIE(MOVIE_NO),
    FOREIGN KEY (TICKET_THEATER_NO) REFERENCES THEATER(THEATER_NO),	
    FOREIGN KEY (TICKET_CINEMA_NO) REFERENCES CINEMA(CINEMA_NO),
    FOREIGN KEY (TICKET_PAYMENT_NO) REFERENCES PAYMENT(PAYMENT_NO)
);

-- 이벤트
CREATE TABLE EVENT (
    EVENT_NO NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,   -- 이벤트 NO(PK)
    EVENT_NAME VARCHAR2(255) NOT NULL,                                      -- 이벤트 제목
    EVENT_DATE VARCHAR2(255) NOT NULL,                                      -- 이벤트 날짜
    EVENT_TITLE_IMAGE VARCHAR2(255) NOT NULL,                               -- 이벤트 타이틀 이미지
    EVENT_SUB_IMAGE VARCHAR2(255) NOT NULL                                  -- 이벤트 본문 이미지
);

-- 좋아요 테이블
CREATE TABLE likes (
    likes_no        NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    likes_review_no NUMBER,
    likes_member_id VARCHAR2(255),
    CONSTRAINT likes_unique UNIQUE (likes_review_no, likes_member_id),
    FOREIGN KEY (likes_review_no) REFERENCES review(review_no) ON DELETE CASCADE,
    FOREIGN KEY (likes_member_id) REFERENCES member(member_id)
);

