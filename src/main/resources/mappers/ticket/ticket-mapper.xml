<?xml version="1.0" encoding="UTF-8"?>


<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ss.cinema.mappers.TicketMapper">

	<resultMap type="movieDTO" id="movieListMap">
		<id property="movieNo" column="MOVIE_NO"/>
		<result property="movieTitle" column="MOVIE_TITLE"/>
		<result property="movieStartDate" column="MOVIE_START_DATE"/>
		<result property="movieEndDate" column="MOVIE_END_DATE"/>
		<result property="movieDirector" column="MOVIE_DIRECTOR"/>
		<result property="movieActor" column="MOVIE_ACTOR"/>
		<result property="movieGenre" column="MOVIE_GENRE"/>
		<result property="movieAgeLimit" column="MOVIE_AGE_LIMIT"/>
		<result property="movieShowtime" column="MOVIE_SHOWTIME"/>
		<result property="movieNationality" column="MOVIE_NATIONALITY"/>
		<result property="movieSummary" column="MOVIE_SUMMARY"/>
		<result property="movieMainImage" column="MOVIE_MAIN_IMAGE"/>
		<result property="movieSubImage" column="MOVIE_SUB_IMAGE"/>
		<result property="movieSsubImage" column="MOVIE_SSUB_IMAGE"/>
		<result property="movieTrailer" column="MOVIE_TRAILER"/>
	</resultMap>
	
	<resultMap type="CinemaDTO" id="cinemaListMap">
		<id property="cinemaNo" column="CINEMA_NO"/>
		<result property="cinemaRLG" column="CINEMA_RLG"/>
		<result property="cinemaBLG" column="CINEMA_BLG"/>
		<result property="cinemaMovieNo" column="CINEMA_MOVIE_NO"/>
		<result property="cinemaScreenDate" column="CINEMA_SCREEN_DATE" javaType="java.sql.Date"/>
	</resultMap>
	
	<resultMap type="TheaterDTO" id="theaterListMap">
		<id property="theaterNo" column="THEATER_NO"/>
		<result property="theaterStartTime" column="THEATER_START_TIME"/>
		<result property="theaterEndTime" column="THEATER_END_TIME"/>
		<result property="theaterName" column="THEATER_NAME"/>
		<result property="theaterCinemaNo" column="THEATER_CINEMA_NO"/>
		<result property="revSeatCnt" column="REV_SEAT_CNT"/>
	</resultMap>
	
	<resultMap type="SeatDTO" id="seatListMap">
		<id property="seatNo" column="SEAT_NO"/>
		<result property="seatTheaterNo" column="SEAT_THEATER_NO"/>
		<result property="seatRow" column="SEAT_ROW"/>
		<result property="seatCol" column="SEAT_COL"/>
	</resultMap>
	
	<resultMap type="MemberDTO" id="memberResultMap">
		<id property="memberId" column="MEMBER_ID" />
		<result property="memberName" column="MEMBER_NAME" />
		<result property="memberPassword" column="MEMBER_PASSWORD" />
		<result property="memberPhone" column="MEMBER_PHONE" />
		<result property="memberEmail" column="MEMBER_EMAIL" />
		<result property="memberCoupon" column="MEMBER_COUPON" />
		<result property="memberAdmin" column="MEMBER_ADMIN" />
		<result property="memberStamp" column="MEMBER_STAMP" />
	</resultMap>
	

	<resultMap type="PaymentDTO" id="paymentResultMap">
		<id property="paymentNo" column="PAYMENT_NO" />
		<result property="paymentType" column="PAYMENT_TYPE" />
		<result property="paymentDate" column="PAYMENT_DATE" />
		<result property="paymentPrice" column="PAYMENT_PRICE" />
		<result property="paymentImpUid" column="PAYMENT_IMP_UID" />
	</resultMap>
	
	

	<select id="getMovieList" resultMap="movieListMap" parameterType="map" >		
		SELECT M.MOVIE_NO, M.MOVIE_TITLE, M.MOVIE_MAIN_IMAGE, M.MOVIE_AGE_LIMIT
		FROM 
		    MOVIE M
		JOIN 
		    CINEMA C ON M.MOVIE_NO = C.CINEMA_MOVIE_NO
		LEFT JOIN 
		    THEATER T ON C.CINEMA_NO = T.THEATER_CINEMA_NO
		LEFT JOIN 
		    (
		        SELECT 
		            TICKET_MOVIE_NO, 
		            SUM(DISTINCT NVL(TICKET_TEEN, 0)) AS TOTAL_TEEN_TICKETS,
		            SUM(DISTINCT NVL(TICKET_ADULT, 0)) AS TOTAL_ADULT_TICKETS,
		            SUM(DISTINCT NVL(TICKET_SENIOR, 0)) AS TOTAL_SENOIR_TICKETS
		        FROM 
		            TICKET
		        GROUP BY 
		            TICKET_MOVIE_NO
		    ) TK ON M.MOVIE_NO = TK.TICKET_MOVIE_NO
		WHERE 
		    TO_CHAR(C.CINEMA_SCREEN_DATE, 'YYYYMMDD') 
		    BETWEEN TO_CHAR(SYSDATE, 'YYYYMMDD') AND TO_CHAR(SYSDATE + 13, 'YYYYMMDD')
		    <![CDATA[
			AND T.THEATER_START_TIME > SYSDATE + INTERVAL '10' MINUTE 
			]]>
			<if test="movieNo != null">
				 AND M.MOVIE_NO = #{movieNo}
			</if>
			
			<if test="cinemaBLG != null">
				 AND C.CINEMA_BLG = #{cinemaBLG}
			</if>
			
			<if test="cinemaScreenDate != null">
				AND TO_CHAR(C.CINEMA_SCREEN_DATE, 'YYYY-MM-DD') = #{cinemaScreenDate}
			</if>
		GROUP BY 
		    M.MOVIE_NO, 
		    M.MOVIE_TITLE, 
		    M.MOVIE_MAIN_IMAGE,
		    M.MOVIE_AGE_LIMIT,
		    TK.TOTAL_TEEN_TICKETS,
		    TK.TOTAL_ADULT_TICKETS,
		    TK.TOTAL_SENOIR_TICKETS
		ORDER BY 
		     NVL(TK.TOTAL_TEEN_TICKETS,0) + NVL(TK.TOTAL_ADULT_TICKETS,0) + NVL(TK.TOTAL_SENOIR_TICKETS,0) DESC
	</select>
	
	
	
	
	<select id="getCinemaList" resultMap="cinemaListMap" parameterType="map">
		SELECT CINEMA_RLG, CINEMA_BLG
		FROM CINEMA C
		JOIN THEATER T ON C.CINEMA_NO = T.THEATER_CINEMA_NO
		WHERE CINEMA_MOVIE_NO IN (
			SELECT C.CINEMA_MOVIE_NO
			FROM MOVIE M
            JOIN CINEMA C ON M.MOVIE_NO = C.CINEMA_MOVIE_NO
            JOIN THEATER T ON C.CINEMA_NO = T.THEATER_CINEMA_NO
			WHERE TO_CHAR(C.CINEMA_SCREEN_DATE,'YYYYMMDD')
			BETWEEN TO_CHAR(SYSDATE, 'YYYYMMDD') AND TO_CHAR(SYSDATE + 13, 'YYYYMMDD')
			<![CDATA[
			AND T.THEATER_START_TIME > SYSDATE + INTERVAL '10' MINUTE 
			]]>
			<if test="movieNo != null">
				 AND M.MOVIE_NO = #{movieNo}
			</if>
			
			<if test="cinemaBLG != null">
				 AND C.CINEMA_BLG = #{cinemaBLG}
			</if>
			
			<if test="cinemaScreenDate != null">
				AND TO_CHAR(C.CINEMA_SCREEN_DATE, 'YYYY-MM-DD') = #{cinemaScreenDate}
			</if>
			<![CDATA[
			AND T.THEATER_START_TIME > SYSDATE + INTERVAL '10' MINUTE 
			]]>
			GROUP BY MOVIE_NO
		)
		<if test="cinemaScreenDate != null">
				AND TO_CHAR(CINEMA_SCREEN_DATE, 'YYYY-MM-DD') = #{cinemaScreenDate}
		</if>	
		<![CDATA[
			AND T.THEATER_START_TIME > SYSDATE + INTERVAL '10' MINUTE 
		]]>
		GROUP BY CINEMA_RLG, CINEMA_BLG
	</select>
	
	
	
	
	<select id="getCinemaDateList" resultMap="cinemaListMap" parameterType="map">
		SELECT CINEMA_SCREEN_DATE
		FROM CINEMA C
		JOIN THEATER T ON C.CINEMA_NO = T.THEATER_CINEMA_NO
		WHERE CINEMA_MOVIE_NO IN (
			SELECT C.CINEMA_MOVIE_NO
			FROM MOVIE M
            JOIN CINEMA C ON M.MOVIE_NO = C.CINEMA_MOVIE_NO
            JOIN THEATER T ON C.CINEMA_NO = T.THEATER_CINEMA_NO
			WHERE TO_CHAR(C.CINEMA_SCREEN_DATE,'YYYYMMDD')
			BETWEEN TO_CHAR(SYSDATE, 'YYYYMMDD') AND TO_CHAR(SYSDATE + 13, 'YYYYMMDD')
			<![CDATA[
			AND T.THEATER_START_TIME > SYSDATE + INTERVAL '10' MINUTE 
			]]>
			<if test="movieNo != null">
				 AND M.MOVIE_NO = #{movieNo}
			</if>
			
			<if test="cinemaBLG != null">
				 AND C.CINEMA_BLG = #{cinemaBLG}
			</if>
			
			<if test="cinemaScreenDate != null">
				AND TO_CHAR(C.CINEMA_SCREEN_DATE, 'YYYY-MM-DD') = #{cinemaScreenDate}
			</if>
			GROUP BY MOVIE_NO
		)
		<if test="cinemaBLG != null">
			AND CINEMA_BLG = #{cinemaBLG}
		</if>
		<if test="cinemaScreenDate != null">
			AND TO_CHAR(CINEMA_SCREEN_DATE, 'YYYY-MM-DD') = #{cinemaScreenDate}
		</if>
		<![CDATA[
			AND T.THEATER_START_TIME > SYSDATE + INTERVAL '10' MINUTE 
		]]>
		GROUP BY CINEMA_SCREEN_DATE
	</select>
	
	
	
	<select id="getTheaterList" resultMap="theaterListMap" parameterType="map">
		SELECT T.THEATER_NO, T.THEATER_START_TIME, T.THEATER_END_TIME, T.THEATER_CINEMA_NO, T.THEATER_NAME, COUNT(S.SEAT_THEATER_NO) AS REV_SEAT_CNT
		FROM THEATER T
       	LEFT JOIN SEAT S ON T.THEATER_NO = S.SEAT_THEATER_NO
       	WHERE T.THEATER_CINEMA_NO IN (
           SELECT CINEMA_NO
           FROM MOVIE M
           JOIN CINEMA C ON M.MOVIE_NO = C.CINEMA_MOVIE_NO
           JOIN THEATER T ON C.CINEMA_NO = T.THEATER_CINEMA_NO
           WHERE 
           <![CDATA[
			T.THEATER_START_TIME > SYSDATE + INTERVAL '10' MINUTE 
			]]>
           AND M.MOVIE_NO = #{movieNo}
           AND C.CINEMA_BLG = #{cinemaBLG}
		AND TO_CHAR(C.CINEMA_SCREEN_DATE, 'YYYY-MM-DD') = #{cinemaScreenDate}
		GROUP BY C.CINEMA_NO
          )
        AND 
        <![CDATA[
			T.THEATER_START_TIME > SYSDATE + INTERVAL '10' MINUTE 
		]]>
        GROUP BY T.THEATER_NO, T.THEATER_START_TIME, T.THEATER_END_TIME, T.THEATER_NAME, T.THEATER_CINEMA_NO
        ORDER BY T.THEATER_NAME
	</select>


	<select id="getSeatList" resultMap="seatListMap" parameterType="String">
		SELECT *
		FROM SEAT
		WHERE SEAT_THEATER_NO = #{theaterNo}
	</select>

	
	<select id="getMemberById" resultMap="memberResultMap" parameterType="String">
		SELECT * 
		FROM MEMBER
		WHERE MEMBER_ID = #{memId}
	</select>
	
	
	<select id="getPayment" resultMap="paymentResultMap" parameterType="map">
		SELECT * 
		FROM PAYMENT
		WHERE PAYMENT_TYPE = #{paymentType}
		AND PAYMENT_DATE = TO_DATE(#{paymentDate}, 'YYYY-MM-DD HH24:MI:SS')
		AND PAYMENT_PRICE = #{paymentPrice}
	</select>
	
	<select id="checkSeat" resultType="int">
		SELECT COUNT(*)
		FROM SEAT
		WHERE SEAT_THEATER_NO = #{theaterNo}
		AND SEAT_ROW = #{seatRow}
		AND SEAT_COL = #{seatCol}
	</select>
	
	
	<insert id="insertSeat">
		INSERT INTO SEAT (SEAT_THEATER_NO, SEAT_ROW, SEAT_COL)
		VALUES (#{theaterNo}, #{seatRow}, #{seatCol})
	</insert>
	
	<insert id="insertPayment" parameterType="map">
		INSERT INTO PAYMENT (PAYMENT_TYPE, PAYMENT_DATE, PAYMENT_PRICE, PAYMENT_IMP_UID)
		VALUES (#{paymentType}, TO_DATE(#{paymentDate}, 'YYYY-MM-DD HH24:MI:SS'), #{paymentPrice}, #{imp_uid})
	</insert>
	
	
	<insert id="insertTicket" parameterType="map">
		INSERT INTO TICKET (TICKET_MEMBER_ID, TICKET_MOVIE_NO, TICKET_SEAT, TICKET_THEATER_NO, TICKET_CINEMA_NO, TICKET_PAYMENT_NO,
		TICKET_TEEN, TICKET_ADULT, TICKET_SENIOR, TICKET_COUPON)
		VALUES (
			#{memberId}, 
			#{movieNo}, 
			#{seatNum},
			#{theaterNo},
			#{cinemaNo},
			#{paymentNo},
			#{ticketTeen},
			#{ticketAdult},
			#{ticketSenior},
			#{useCouponCnt}
			
		)
	</insert>
	
	<update id="setMemberStamp" parameterType="com.ss.cinema.dto.MemberDTO">
		UPDATE MEMBER
		SET MEMBER_COUPON = #{memberCoupon},
		    MEMBER_STAMP = #{memberStamp}
		WHERE MEMBER_ID = #{memberId}
	</update>

</mapper>
